# Generated by Django 5.1a1 on 2024-09-29 13:04

import django.db.models.deletion
import sheets.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('mode', models.CharField(choices=[('traditional', 'Traditional'), ('advanced', 'Advanced'), ('evolved', 'Evolved')], max_length=50)),
                ('gamemode', models.CharField(choices=[('annihilation', 'Annihilation'), ('domination', 'Domination'), ('flag_tank', 'Flag Tank')], max_length=50)),
                ('best_of_number', models.IntegerField()),
                ('map_selection', models.CharField(max_length=255)),
                ('money_rules', models.CharField(choices=[('none', 'None'), ('money_rule', 'Money Rule'), ('even_split', 'Even Split')], max_length=50)),
                ('special_rules', models.TextField(blank=True, null=True)),
                ('was_played', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MatchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winning_side', models.CharField(choices=[('team_1', 'Team 1'), ('team_2', 'Team 2')], max_length=10)),
                ('is_calced', models.BooleanField(default=False)),
                ('match', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sheets.match')),
            ],
        ),
        migrations.CreateModel(
            name='Tank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('battle_rating', models.FloatField(default=1.0)),
                ('price', models.IntegerField(default=0)),
                ('rank', models.IntegerField(default=1)),
                ('type', models.CharField(default='MT', max_length=50)),
                ('manufacturers', models.ManyToManyField(related_name='tanks', to='sheets.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='TankBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price', models.IntegerField(default=0)),
                ('tanks', models.ManyToManyField(to='sheets.tank')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('color', models.CharField(default='#000000', max_length=7)),
                ('balance', models.IntegerField(default=0)),
                ('upgrade_kits', models.JSONField(default=sheets.models.default_upgrade_kits)),
                ('manufacturers', models.ManyToManyField(related_name='teams', to='sheets.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='TankLost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('match_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tanks_lost', to='sheets.matchresult')),
                ('tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheets.tank')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheets.team')),
            ],
        ),
        migrations.CreateModel(
            name='Substitute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High')])),
                ('side', models.CharField(choices=[('team_1', 'Team 1'), ('team_2', 'Team 2')], default='team_1', max_length=10)),
                ('match_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutes', to='sheets.matchresult')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitute_teams', to='sheets.team')),
                ('team_played_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assisted_by_substitutes', to='sheets.team')),
            ],
        ),
        migrations.AddField(
            model_name='matchresult',
            name='judge',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='judged_matches', to='sheets.team'),
        ),
        migrations.CreateModel(
            name='TeamBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheets.tankbox')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheets.team')),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='tank_boxes',
            field=models.ManyToManyField(related_name='teams', through='sheets.TeamBox', to='sheets.tankbox'),
        ),
        migrations.CreateModel(
            name='TeamMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.CharField(choices=[('team_1', 'Team 1'), ('team_2', 'Team 2')], default='team_1', max_length=10)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheets.match')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheets.team')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='teams',
            field=models.ManyToManyField(related_name='matches', through='sheets.TeamMatch', to='sheets.team'),
        ),
        migrations.CreateModel(
            name='TeamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonuses', models.FloatField(blank=True, null=True)),
                ('penalties', models.FloatField(blank=True, null=True)),
                ('match_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_results', to='sheets.matchresult')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheets.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamTank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_upgradable', models.BooleanField(default=True)),
                ('tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheets.tank')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheets.team')),
            ],
        ),
        migrations.AddField(
            model_name='teammatch',
            name='tanks',
            field=models.ManyToManyField(related_name='team_matches', to='sheets.teamtank'),
        ),
        migrations.AddField(
            model_name='team',
            name='tanks',
            field=models.ManyToManyField(related_name='teams', through='sheets.TeamTank', to='sheets.tank'),
        ),
        migrations.CreateModel(
            name='UpgradePath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_kit_tier', models.CharField(blank=True, max_length=50, null=True)),
                ('cost', models.IntegerField(default=0)),
                ('from_tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upgrade_from', to='sheets.tank')),
                ('to_tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upgrade_to', to='sheets.tank')),
            ],
        ),
        migrations.AddField(
            model_name='tank',
            name='upgrades',
            field=models.ManyToManyField(related_name='downgrades', through='sheets.UpgradePath', to='sheets.tank'),
        ),
    ]
